<?xml version="1.0"?>
<project name="Processing PDE" default="build">
  <import file="build-core.xml" />
  <import file="build-resources.xml" />

  <target name="clean" description="Clean the build directories">
    <delete dir="${picode-classes.dir}" />
    <delete file="${picode-jar.name}" />
  </target>

  <target name="compile" description="Compile sources">

    <mkdir dir="${picode-classes.dir}" />

    <!-- ant seems to nuke ${java.home} for some reason, pointing at the JRE
	 subfolder instead of the actual JDK found at JAVA_HOME. 
	 To avoid this, we grab the actual JAVA_HOME environment variable 
	 and use that to specify the location of tools.jar. -->
    <!-- if someone is better with ant please help clean this up -->
    <property environment="env" />
    <property name="java_home" value="${env.JAVA_HOME}" />
    <available file="${env.JAVA_HOME}/lib/tools.jar"
	       property="java_tools_found" />

    <condition property="linux">
      <and>
	<os family="unix" />
	<not>
	  <os family="mac" />
	</not>
      </and>
    </condition>
    <fail if="linux" unless="java_tools_found" 
	  message="The JAVA_HOME variable must be set to the location of a full JDK. For instance, on Ubuntu Linux, this might be /usr/lib/jvm/java-6-sun." />

    <condition property="windows">
      <os family="windows" />
    </condition>
    <fail if="windows" unless="java_tools_found" 
	  message="The JAVA_HOME variable must be set to the location of a full JDK. For instance, on Windows, this might be c:\jdk1.6.0_19." />

    <javac source="1.6" 
	   target="1.6" 
	   destdir="${picode-classes.dir}" 
	   encoding="UTF-8" 
	   includeAntRuntime="false" 
	   classpath="${picode-classpath}"
	   debug="on">
      <src path="${picode-src-core.dir}" />
      <src path="${picode-src.dir}" />
      <src path="processing/src" />
      <src path="processing/generated" />
    </javac>
  </target>

  <target name="build" depends="compile" description="Build PDE">
    <jar destfile="picode.jar">
		<fileset dir="${picode-classes.dir}" />
		<fileset dir="${picode-src.dir}" />
		<fileset dir="${picode-src-core.dir}" />
		<fileset dir="${picode-resources.dir}" />
    </jar>
  </target>
</project>
