/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package jp.digitalmuseum.kinect;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum JointType implements org.apache.thrift.TEnum {
  HIP_CENTER(0),
  SPINE(1),
  SHOULDER_CENTER(2),
  HEAD(3),
  SHOULDER_RIGHT(4),
  ELBOW_RIGHT(5),
  WRIST_RIGHT(6),
  HAND_RIGHT(7),
  SHOULDER_LEFT(8),
  ELBOW_LEFT(9),
  WRIST_LEFT(10),
  HAND_LEFT(11),
  HIP_RIGHT(12),
  KNEE_RIGHT(13),
  ANKLE_RIGHT(14),
  FOOT_RIGHT(15),
  HIP_LEFT(16),
  KNEE_LEFT(17),
  ANKLE_LEFT(18),
  FOOT_LEFT(19);

  private final int value;

  private JointType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static JointType findByValue(int value) { 
    switch (value) {
      case 0:
        return HIP_CENTER;
      case 1:
        return SPINE;
      case 2:
        return SHOULDER_CENTER;
      case 3:
        return HEAD;
      case 4:
        return SHOULDER_RIGHT;
      case 5:
        return ELBOW_RIGHT;
      case 6:
        return WRIST_RIGHT;
      case 7:
        return HAND_RIGHT;
      case 8:
        return SHOULDER_LEFT;
      case 9:
        return ELBOW_LEFT;
      case 10:
        return WRIST_LEFT;
      case 11:
        return HAND_LEFT;
      case 12:
        return HIP_RIGHT;
      case 13:
        return KNEE_RIGHT;
      case 14:
        return ANKLE_RIGHT;
      case 15:
        return FOOT_RIGHT;
      case 16:
        return HIP_LEFT;
      case 17:
        return KNEE_LEFT;
      case 18:
        return ANKLE_LEFT;
      case 19:
        return FOOT_LEFT;
      default:
        return null;
    }
  }
}
